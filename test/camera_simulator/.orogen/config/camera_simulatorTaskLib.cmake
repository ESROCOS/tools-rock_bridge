# What does the task library needs ?
#  - it needs to be able to include the <typekit_name>TypekitTypes.hpp files for
#    each used typekit. It does not need to link the library, though, because the
#    typekit itself is hidden from the actual task contexts.
#  - it needs to have access to the dependent task libraries and libraries. This
#    is true for both the headers and the link interface itself.
#
# What this file does is set up the following variables:
#  component_TASKLIB_NAME
#     the name of the library (test-tasks-gnulinux for instance)
#
#  <PROJECT>_TASKLIB_SOURCES
#     the .cpp files that define the task context classes, including the
#     autogenerated parts.
#
#  <PROJECT>_TASKLIB_SOURCES
#     the .hpp files that declare the task context classes, including the
#     autogenerated parts.
#
#  <PROJECT>_TASKLIB_DEPENDENT_LIBRARIES
#     the list of libraries to which the task library should be linked.
#
#  <PROJECT>_TASKLIB_INTERFACE_LIBRARIES
#     the list of libraries to which users of the task library should be linked
#     as well
#
# These variables are used in tasks/CMakeLists.txt to actually build the shared
# object.

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/typekit)
list(APPEND CAMERA_SIMULATOR_TASKLIB_DEPENDENT_LIBRARIES 
    camera_simulator-typekit-${OROCOS_TARGET})

orogen_pkg_check_modules(CAMERA_IDS REQUIRED camera_ids)
include_directories(${CAMERA_IDS_INCLUDE_DIRS})
add_definitions(${CAMERA_IDS_CFLAGS_OTHER})
orogen_pkg_check_modules(LOGGER_TASKS_GNULINUX REQUIRED logger-tasks-gnulinux)
include_directories(${LOGGER_TASKS_GNULINUX_INCLUDE_DIRS})
add_definitions(${LOGGER_TASKS_GNULINUX_CFLAGS_OTHER})
orogen_pkg_check_modules(base_TYPEKIT REQUIRED base-typekit-gnulinux)
include_directories(${base_TYPEKIT_INCLUDE_DIRS})
add_definitions(${base_TYPEKIT_CFLAGS_OTHER})
link_directories(${base_TYPEKIT_LIBRARY_DIRS})
orogen_pkg_check_modules(camera_ids REQUIRED camera_ids)
include_directories(${camera_ids_INCLUDE_DIRS})
add_definitions(${camera_ids_CFLAGS_OTHER})
link_directories(${camera_ids_LIBRARY_DIRS})
orogen_pkg_check_modules(std_TYPEKIT REQUIRED std-typekit-gnulinux)
include_directories(${std_TYPEKIT_INCLUDE_DIRS})
add_definitions(${std_TYPEKIT_CFLAGS_OTHER})
link_directories(${std_TYPEKIT_LIBRARY_DIRS})


list(APPEND CAMERA_SIMULATOR_TASKLIB_DEPENDENT_LIBRARIES ${base_TYPEKIT_LIBRARIES})

list(APPEND CAMERA_SIMULATOR_TASKLIB_DEPENDENT_LIBRARIES ${camera_ids_LIBRARIES})

list(APPEND CAMERA_SIMULATOR_TASKLIB_DEPENDENT_LIBRARIES ${std_TYPEKIT_LIBRARIES})

CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/.orogen/tasks/camera_simulator-tasks.pc.in
    ${CMAKE_CURRENT_BINARY_DIR}/camera_simulator-tasks-${OROCOS_TARGET}.pc @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/camera_simulator-tasks-${OROCOS_TARGET}.pc
    DESTINATION lib/pkgconfig)



add_definitions(-DRTT_COMPONENT)
set(CAMERA_SIMULATOR_TASKLIB_NAME camera_simulator-tasks-${OROCOS_TARGET})
set(CAMERA_SIMULATOR_TASKLIB_SOURCES
    ${PROJECT_SOURCE_DIR}/.orogen/tasks/DeployerComponent.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/../.orogen/tasks//CameraDriverBase.cpp;CameraDriver.cpp)
set(CAMERA_SIMULATOR_TASKLIB_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/../.orogen/tasks//CameraDriverBase.hpp;CameraDriver.hpp)
include_directories(${OrocosRTT_INCLUDE_DIRS})
link_directories(${OrocosRTT_LIBRARY_DIRS})
add_definitions(${OrocosRTT_CFLAGS_OTHER})

